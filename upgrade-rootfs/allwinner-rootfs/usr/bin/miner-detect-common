#!/bin/sh

get_miner_params() {
    local miner_type=$1

    case $miner_type in
        M1)
            case $hash_board_version in
                HB10)
                    chip_num=66
                    CGMINERFILE="cgminer.m1.v10"
                    POWERSFILE="powers.m1.v10"
                    ;;
                HB12)
                    chip_num=66
                    CGMINERFILE="cgminer.m1.v12"
                    POWERSFILE="powers.m1.v12"
                    ;;
                *)
                    chip_num=66
                    ;;
            esac
            ;;
        M1s)
            chip_num=60
            CGMINERFILE="cgminer.m1s"
            POWERSFILE="powers.m1s"
            ;;
        M2)
            chip_num=38
            CGMINERFILE="cgminer.m2"
            POWERSFILE="powers.m2"
            ;;
        M3)
            case $hash_board_version in
                HB10|HB12|HB14|HB15)
                    chip_num=63
                    CGMINERFILE="cgminer.m3.v10"
                    POWERSFILE="powers.m3.v10"
                    ;;
                HB11)
                    chip_num=66
                    CGMINERFILE="cgminer.m3.v11"
                    POWERSFILE="powers.m3.v11"
                    ;;
                HB20|HB21|HB22)
                    chip_num=63
                    CGMINERFILE="cgminer.m3.v20"
                    POWERSFILE="powers.m3.v20"
                    ;;
                *)
                    chip_num=63
                    ;;
            esac
            ;;
        *)
            miner_type="unknown"
            chip_num=63
            ;;
    esac
}

detect_power_supply_version() {
    local power_version
    local advanced_power_version_path

    source /usr/bin/detect-platform.sh
    if [ "${CONTROL_BOARD_PLATFORM:0:9}" = "ALLWINNER" ]; then
        advanced_power_version_path="/sys/bus/i2c/drivers/p6-power/2-002c/version"
    else
        advanced_power_version_path="/sys/bus/i2c/drivers/p6-power/1-002c/version"
    fi

    if [ -f $advanced_power_version_path ]; then
        power_version=`cat $advanced_power_version_path`
        if [ "$power_version" = "22" ]; then
            power_type="P6"
        else
            power_type="PX"
        fi
        return
    fi

    power_version=`readpower -v | grep 'Power version'`
    if [ "$power_version" = "Power version = 00 01 07" ]; then
        power_type="P5"
    elif [ "$power_version" = "Power version = 00 01 06" ]; then
        power_type="P3"
    elif [ "$power_version" = "Power version = 00 01 05" ]; then
        power_type="P2"
    elif [ "$power_version" = "Power version = 00 00 04" ]; then
        power_type="P1"
    elif [ "$miner_type" = "M1" -a "$hash_board_version" = "HB10" ]; then
        power_type="P0"
    elif [ "$power_version" != "" ]; then
        power_type="P?"
    else
        power_type="PX"
    fi
}

force_miner_type=$1

if [ "$force_miner_type" != "" ]; then
    logger "force_miner_type $force_miner_type"
fi

#
# Common script to detect the miner info.
#

# Detect control board type and version
source /usr/bin/detect-platform.sh

gpio_hotplug0_path="/sys/class/gpio/gpio$HASH_PLUG_PIN0/value"
gpio_hotplug1_path="/sys/class/gpio/gpio$HASH_PLUG_PIN1/value"
gpio_hotplug2_path="/sys/class/gpio/gpio$HASH_PLUG_PIN2/value"

gpio_en0_path="/sys/class/gpio/gpio$HASH_ENABLE_PIN0/value"
gpio_en1_path="/sys/class/gpio/gpio$HASH_ENABLE_PIN1/value"
gpio_en2_path="/sys/class/gpio/gpio$HASH_ENABLE_PIN2/value"

gpio_reset0_path="/sys/class/gpio/gpio$HASH_RESET_PIN0/value"
gpio_reset1_path="/sys/class/gpio/gpio$HASH_RESET_PIN1/value"
gpio_reset2_path="/sys/class/gpio/gpio$HASH_RESET_PIN2/value"

if [ "${CONTROL_BOARD_PLATFORM:0:9}" = "ALLWINNER" ]; then
    if [ "$CONTROL_BOARD_PLATFORM" = "ALLWINNER_H3" ]; then
        control_board_type="H3"
        echo PG5 2 > /sys/kernel/debug/sunxi_pinctrl/pull
        detect_version_gpio_level=`cat /sys/class/gpio/gpio197/value`
        if [ "$detect_version_gpio_level" = "0" ]; then
            control_board_version="CB20"
        else
            control_board_version="CB26"
        fi
    else
        control_board_type="H8"
        control_board_version="CB10"
    fi
else
    control_board_type="ZYNQ"

    memsize=`cat /proc/meminfo | grep MemTotal | awk '{print $2}'`
    if [ $memsize -le 262144 ]; then
        control_board_version="CB12"
    else
        control_board_version="CB10"
    fi
fi

# Detect miner type and hash board version
# /tmp/eeprom_data_out was generated by detect-eeprom-data
if [ -f /tmp/eeprom_data_out ]; then
    source /tmp/eeprom_data_out

    miner_type_lowcase=`echo $miner_type | tr 'A-Z' 'a-z'`
    if [ "$miner_type_lowcase" = "m3" ] && [ "${pcb_version:0:1}" = "2" ]; then
        pcb_version="20"
    fi

    config_file_suffix="$miner_type_lowcase.v$pcb_version"
    CGMINERFILE="cgminer.$config_file_suffix"
    POWERSFILE="powers.$config_file_suffix"
    FANSFILE="fans.$config_file_suffix"
else
    source /usr/bin/miner-detect-by-legacy $force_miner_type

    if [ "$alternative_miner_type" != "" ]; then
        get_miner_params $alternative_miner_type
        echo $alternative_miner_type > /tmp/alternative_miner_type
        echo $chip_num > /tmp/alternative_miner_chip_num
    fi

    get_miner_params $miner_type
fi

CGMINERDEFAULTFILE=${CGMINERFILE/cgminer/cgminer.default}
if [ ! -f /etc/config/$CGMINERDEFAULTFILE ]; then
    CGMINERDEFAULTFILE="cgminer.default.common"
    CGMINERFILE="cgminer.common"
fi
if [ ! -f /etc/config/$CGMINERFILE ]; then
    logger "cp /etc/config/$CGMINERDEFAULTFILE /etc/config/$CGMINERFILE for the first time"
    cp /etc/config/$CGMINERDEFAULTFILE /etc/config/$CGMINERFILE
    sync
fi

POWERSDEFAUTFILE=${POWERSFILE/powers/powers.default}
if [ ! -f /etc/config/$POWERSDEFAUTFILE ]; then
    POWERSDEFAUTFILE="powers.default.common"
    POWERSFILE="powers.common"
fi
if [ ! -f /etc/config/$POWERSFILE ]; then
    logger "cp /etc/config/$POWERSDEFAUTFILE /etc/config/$POWERSFILE for the first time"
    cp /etc/config/$POWERSDEFAUTFILE /etc/config/$POWERSFILE
    sync
fi

if [ "$FANSFILE" = "" ] || [ ! -f /etc/config/$FANSFILE ]; then
    FANSFILE="fans.common"
fi

detect_power_supply_version

# Detect firmware version
if [ -f /etc/microbt_release ]; then
    firmware_version=`cat /etc/microbt_release | grep FIRMWARE_VERSION | awk -F '=' '{print $2}'`
    firmware_version=`echo ${firmware_version:1}`
    firmware_version=`echo ${firmware_version%\'*}`

    if [ "$control_board_type" = "H3" ]; then
        boot_part=`cat /proc/cmdline | grep boot_part`
        if [ "$boot_part" = "" ]; then
            firmware_version=`echo OLD-$firmware_version`
        fi
    fi
    auto_adjust_vol_enabled=`grep ":$power_version:" /etc/config/powers | cut -d ':' -f 7`
else
    firmware_version="unknown"
fi
